grf {
	grfid: "BS04";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESCRIPTION);
	version: 4;
	min_compatible_version: 4;

	param {
		param_running_cost_mult {
			type: int;
			name: string(STR_PARAM_RUNNING_COST);
			desc: string(STR_PARAM_RUNNING_COST_DESC);
			min_value: 0;
			max_value: 18;
			def_value: 0;
			names: {
				0: string(STR_PARAM_COST_AUTOMATICALLY);
				1: string(STR_PARAM_COST_BY256);
				2: string(STR_PARAM_COST_BY128);
				3: string(STR_PARAM_COST_BY64);
				4: string(STR_PARAM_COST_BY32);
				5: string(STR_PARAM_COST_BY16);
				6: string(STR_PARAM_COST_BY8);
				7: string(STR_PARAM_COST_BY4);
				8: string(STR_PARAM_COST_BY2);
				9: string(STR_PARAM_COST_NORMAL);
				10: string(STR_PARAM_COST_TIMES2);
				11: string(STR_PARAM_COST_TIMES4);
				12: string(STR_PARAM_COST_TIMES8);
				13: string(STR_PARAM_COST_TIMES16);
				14: string(STR_PARAM_COST_TIMES32);
				15: string(STR_PARAM_COST_TIMES64);
				16: string(STR_PARAM_COST_TIMES128);
				17: string(STR_PARAM_COST_TIMES256);
				18: string(STR_PARAM_COST_TIMES512);
			};
		}
	}

	param {
		param_purchase_cost_mult {
			type: int;
			name: string(STR_PARAM_PURCHASE_COST);
			desc: string(STR_PARAM_PURCHASE_COST_DESC);
			min_value: 0;
			max_value: 18;
			def_value: 0;
			names: {
				0: string(STR_PARAM_COST_AUTOMATICALLY);
				1: string(STR_PARAM_COST_BY256);
				2: string(STR_PARAM_COST_BY128);
				3: string(STR_PARAM_COST_BY64);
				4: string(STR_PARAM_COST_BY32);
				5: string(STR_PARAM_COST_BY16);
				6: string(STR_PARAM_COST_BY8);
				7: string(STR_PARAM_COST_BY4);
				8: string(STR_PARAM_COST_BY2);
				9: string(STR_PARAM_COST_NORMAL);
				10: string(STR_PARAM_COST_TIMES2);
				11: string(STR_PARAM_COST_TIMES4);
				12: string(STR_PARAM_COST_TIMES8);
				13: string(STR_PARAM_COST_TIMES16);
				14: string(STR_PARAM_COST_TIMES32);
				15: string(STR_PARAM_COST_TIMES64);
				16: string(STR_PARAM_COST_TIMES128);
				17: string(STR_PARAM_COST_TIMES256);
				18: string(STR_PARAM_COST_TIMES512);
			};
		}
	}
}

/*
 * ********************************************
 * Parameter 1: Running Costs
 * 0: Automatic (default)
 * 1: 1/256
 * 2: 1/128
 * ...
 * 9: 1
 * ...
 * 18: 256x
 * in NML a value of 0 means: don't change the base costs
 * ********************************************
 */

RUNNING_COST_MOD = (param_running_cost_mult == 0) ? 0 : param_running_cost_mult - 9;

/*
 * ********************************************
 * Parameter 2: Purchase Costs
 * 0: Automatic (default)
 * 1: 1/256
 * 2: 1/128
 * ...
 * 9: 1
 * ...
 * 18: 256x
 * in NML a value of 0 means: don't change the base costs
 * ********************************************
 */

PURCHASE_COST_MOD = (param_purchase_cost_mult == 0) ? 0 : param_purchase_cost_mult - 9;

param[30] = RUNNING_COST_MOD;
param[31] = PURCHASE_COST_MOD;

basecost {
	PR_RUNNING_TRAIN_STEAM: param[30] + 4;
	PR_BUILD_VEHICLE_TRAIN: param[31] + 3;
	PR_BUILD_VEHICLE_WAGON: param[31] + 8;
}

railtypetable {
	VACT
}

cargotable {
	PASS, MAIL, GOOD, VALU, GOLD, DIAM
}

//templates for trains
template template_traincar() {
	[000,0, 08, 24, -3,-12, 0]
	[016,0, 22, 17, -14, -9, 0]
	[048,0, 32, 12, -16, -8, 0]
	[096,0, 22, 17, -6, -9, 0]
	[128,0, 08, 24, -3,-12, 0]
	[144,0, 22, 17, -14, -9, 0]
	[176,0, 32, 12, -16, -8, 0]
	[224,0, 22, 17, -6, -9, 0]
}

spriteset(vactrain1_group, "gfx/experiment.png") {
	template_traincar()
}

spriteset(longdist1_group, "gfx/longdist1.png") {
	template_traincar()
}

spriteset(local1_group, "gfx/local1.png") {
	template_traincar()
}

spriteset(doublewagon1_group, "gfx/double1.png") {
	template_traincar()
}

spriteset(doublewagon2_group, "gfx/double2.png") {
	template_traincar()
}

spriteset(doublemail2_set, "gfx/doublemail2.png") {
	template_traincar()
}

spriteset(doublemail1_set, "gfx/doublemail1.png") {
	template_traincar()
}

spritegroup doublemail_group {
	loading: doublemail2_set;
	loaded: doublemail1_set;
}

spriteset(longdistwagon_group, "gfx/longdistwagon.png") {
	template_traincar()
}

spriteset(localwagon_group, "gfx/localwagon.png") {
	template_traincar()
}

spriteset(mailwagon0_set, "gfx/mail0.png") {
	template_traincar()
}

spriteset(mailwagon1_set, "gfx/mail1.png") {
	template_traincar()
}

spritegroup mailwagon_group {
	loading: mailwagon0_set;
	loaded: mailwagon1_set;
}

switch(FEAT_TRAINS, SELF, testvac_can_attach, vehicle_type_id) {
	test_train	: CB_RESULT_ATTACH_ALLOW;
	localwagon	: CB_RESULT_ATTACH_ALLOW;
	longdistwagon	: CB_RESULT_ATTACH_ALLOW;
	mailwagon	: CB_RESULT_ATTACH_ALLOW;
	local1		: string(STR_COMPAT_MULTI);
	longdist1	: string(STR_COMPAT_MULTI);
	double1		: string(STR_COMPAT_MULTI);
	doublewagon	: string(STR_COMPAT_JVAC_CAR);
			  string(STR_COMPAT_TEST);
}

switch(FEAT_TRAINS, SELF, vac1_can_attach, vehicle_type_id) {
	local1		: CB_RESULT_ATTACH_ALLOW;
	localwagon	: CB_RESULT_ATTACH_ALLOW;
	longdistwagon	: CB_RESULT_ATTACH_ALLOW;
	mailwagon	: CB_RESULT_ATTACH_ALLOW;
	test_train	: string(STR_COMPAT_MULTI);
	longdist1	: string(STR_COMPAT_MULTI);
	double1		: string(STR_COMPAT_MULTI);
	doublewagon	: string(STR_COMPAT_JVAC_CAR);
			  string(STR_COMPAT_VAC1);
}

switch(FEAT_TRAINS, SELF, vac2_can_attach, vehicle_type_id) {
	longdist1	: CB_RESULT_ATTACH_ALLOW;
	localwagon	: CB_RESULT_ATTACH_ALLOW;
	longdistwagon	: CB_RESULT_ATTACH_ALLOW;
	mailwagon	: CB_RESULT_ATTACH_ALLOW;
	local1		: string(STR_COMPAT_MULTI);
	test_train	: string(STR_COMPAT_MULTI);
	double1		: string(STR_COMPAT_MULTI);
	doublewagon	: string(STR_COMPAT_JVAC_CAR);
			  string(STR_COMPAT_VAC2);
}

switch(FEAT_TRAINS, SELF, jvac_can_attach, vehicle_type_id) {
	double1		: CB_RESULT_ATTACH_ALLOW;
	doublewagon	: CB_RESULT_ATTACH_ALLOW;
	local1		: string(STR_COMPAT_MULTI);
	longdist1	: string(STR_COMPAT_MULTI);
	test_train	: string(STR_COMPAT_MULTI);
			  string(STR_COMPAT_JVAC);
}


item (FEAT_TRAINS, test_train) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
		track_type			: VACT;
		name				: string(STR_NAME_TEST_TRAIN);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2027,1,1);
		speed				: 2400 km/h;
		tractive_effort_coefficient	: 1;
		air_drag_coefficient		: 0;
		power				: 16000 hp;
		dual_headed			: 0;
		engine_class			: ENGINE_CLASS_MAGLEV;
		cargo_capacity			: 60;
		cargo_allow_refit		: [PASS];
		weight				: 81;
		loading_speed			: 10;
		reliability_decay		: 55;
		model_life			: 20;
		vehicle_life			: 10;
		cost_factor			: 149;
		running_cost_factor		: 255;
		running_cost_base		: RUNNING_COST_STEAM;
	}
	graphics { // graphics for engine
		default: vactrain1_group;
		can_attach_wagon		: testvac_can_attach;
	}
	livery_override(localwagon) { // graphics for alternative look of passenger wagon when used with this engine
		localwagon_group;
	}
	livery_override(longdistwagon) { // graphics for alternative look of passenger wagon when used with this engine
		longdistwagon_group;
	}
	livery_override(mailwagon) { // graphics for alternative look of passenger wagon when used with this engine
		mailwagon_group;
	}
}

item (FEAT_TRAINS, longdist1) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU);
		track_type			: VACT;
		name				: string(STR_NAME_LONGDIST1);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2046,1,1);
		speed				: 3800 km/h;
		tractive_effort_coefficient	: 1;
		air_drag_coefficient		: 0;
		power				: 21000 hp;
		extra_power_per_wagon		: 7000 hp;
		dual_headed			: 1;
		engine_class			: ENGINE_CLASS_MAGLEV;
		cargo_capacity			: 46;
		loading_speed			: 20;
		cargo_allow_refit		: [PASS];
		weight				: 62;
		reliability_decay		: 12;
		model_life			: 42;
		vehicle_life			: 48;
		cost_factor			: 242;
		running_cost_factor		: 211;
		running_cost_base		: RUNNING_COST_STEAM;
	}
	graphics { // graphics for engine
		default: longdist1_group;
		can_attach_wagon		: vac2_can_attach;
	}
	livery_override(localwagon) { // graphics for alternative look of passenger wagon when used with this engine
		localwagon_group;
	}
	livery_override(longdistwagon) { // graphics for alternative look of passenger wagon when used with this engine
		longdistwagon_group;
	}
	livery_override(mailwagon) { // graphics for alternative look of passenger wagon when used with this engine
		mailwagon_group;
	}
}

item (FEAT_TRAINS, local1) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU);
		track_type			: VACT;
		name				: string(STR_NAME_LOCAL1);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2033,1,1);
		speed				: 2900 km/h;
		tractive_effort_coefficient	: 1;
		air_drag_coefficient		: 0;
		power				: 18000 hp;
		extra_power_per_wagon		: 6000 hp;
		dual_headed			: 1;
		engine_class			: ENGINE_CLASS_MAGLEV;
		cargo_capacity			: 120;
		cargo_allow_refit		: [PASS];
		weight				: 66;
		loading_speed			: 20;
		reliability_decay		: 5;
		model_life			: 60;
		vehicle_life			: 48;
		cost_factor			: 203;
		running_cost_factor		: 233;
		running_cost_base		: RUNNING_COST_STEAM;
	}
	graphics { // graphics for engine
		default: local1_group;
		can_attach_wagon		: vac1_can_attach;
	}
	livery_override(localwagon) { // graphics for alternative look of passenger wagon when used with this engine
		localwagon_group;
	}
	livery_override(longdistwagon) { // graphics for alternative look of passenger wagon when used with this engine
		longdistwagon_group;
	}
	livery_override(mailwagon) { // graphics for alternative look of passenger wagon when used with this engine
		mailwagon_group;
	}
}

item (FEAT_TRAINS, longdistwagon) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC);
		track_type			: VACT;
		name				: string(STR_NAME_LONGDISTWAGON);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2030,1,1);
		power				: 0;
		cargo_capacity			: 78;
		cargo_allow_refit		: [PASS];
		weight				: 17;
		cost_factor			: 200;
		loading_speed			: 40;
		cargo_age_period		: 123;
	}
	graphics { // graphics for engine
		longdistwagon_group;
	}
}

item (FEAT_TRAINS, localwagon) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC);
		track_type			: VACT;
		name				: string(STR_NAME_LOCALWAGON);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2030,1,1);
		power				: 0;
		cargo_capacity			: 141;
		cargo_allow_refit		: [PASS];
		weight				: 17;
		loading_speed			: 30;
		cost_factor			: 188;
	}
	graphics { // graphics for engine
		localwagon_group;
	}
}

item (FEAT_TRAINS, doublewagon) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC);
		track_type			: VACT;
		name				: string(STR_NAME_DOUBLEWAGON);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2072,1,1);
		speed				: 4200 km/h;
		power				: 0;
		cargo_capacity			: 250;
		cargo_allow_refit		: [PASS];
		weight				: 28;
		loading_speed			: 60;
		cost_factor			: 255;
	}
	graphics { // graphics for engine
		doublewagon1_group;
	}
}

item (FEAT_TRAINS, mailwagon) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_FLIP);
		track_type			: VACT;
		name				: string(STR_NAME_MAILWAGON);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2030,1,1);
		power				: 0;
		cargo_capacity			: 60;
		cargo_allow_refit		: [PASS, GOOD, VALU, GOLD, DIAM];
		weight				: 25;
		loading_speed			: 30;
		cost_factor			: 180;
	}
	graphics { // graphics for engine
		mailwagon_group;
	}
}


item (FEAT_TRAINS, double1) {
	property {
		sprite_id			: SPRITE_ID_NEW_TRAIN;
		misc_flags			: bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU);
		track_type			: VACT;
		name				: string(STR_NAME_DOUBLE1);
		climates_available		: ALL_CLIMATES;
		introduction_date		: date(2072,1,1);
		speed				: 4100 km/h;
		air_drag_coefficient		: 0;
		power				: 32000 hp;
		extra_power_per_wagon		: 16000 hp;
		dual_headed			: 1;
		engine_class			: ENGINE_CLASS_MAGLEV;
		cargo_capacity			: 200;
		cargo_allow_refit		: [PASS];
		cargo_age_period		: 100;
		loading_speed			: 15;
		weight				: 20;
		loading_speed			: 40;
		reliability_decay		: 5;
		model_life			: 60;
		vehicle_life			: 48;
		cost_factor			: 255;
		running_cost_factor		: 253;
		running_cost_base		: RUNNING_COST_STEAM;
	}
	graphics { // graphics for engine
		default				: doublewagon1_group;
		can_attach_wagon		: jvac_can_attach;
	}
	livery_override(doublewagon) { // graphics for alternative look of passenger wagon when used with this engine
		doublewagon1_group;
	}
	livery_override(mailwagon) { // graphics for alternative look of passenger wagon when used with this engine
		doublemail_group;
	}
}

sort(FEAT_TRAINS, [test_train, local1, longdist1, localwagon, longdistwagon, mailwagon, double1, doublewagon]);

